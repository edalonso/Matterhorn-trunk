<?xml version="1.0" encoding="UTF-8"?>
<definition xmlns="http://workflow.opencastproject.org">

  <id>fullTeltek</id>
  <title>Encode, Analyze, Crop and Distribute in 4:3</title>
  <tags>
    <tag>upload</tag>
    <tag>schedule</tag>
    <tag>archive</tag>
  </tags>
  <description>
    A simple workflow that transcodes the media into distribution formats, then sends the resulting distribution files,
    along with their associated metadata, to the distribution channels.
  </description>

  <configuration_panel>
  <![CDATA[
    <fieldset>
      <legend>Holds</legend>
      <span>Processing should be paused to allow for:</span>
      <ul class="oc-ui-checkbox-list" id="hold-ul">
        <li class="ui-helper-clearfix">
          <span id="trimholdconfig">
            <input id="trimHold" name="trimHold" type="checkbox" class="configField holdCheckbox" value="true" />
            <label for="trimHold" id="i18n_hold_for_trim">&nbsp;Review / Trim before encoding (with option to edit info)</label>
          </span>
        </li>
        <li class="ui-helper-clearfix">
          <span id="captionconfig">
            <input id="captionHold" name="captionHold" type="checkbox" class="configField holdCheckbox" value="true"/>
            <label for="captionHold" id="i18n_hold_for_caption">&nbsp;Captions file upload</label>
          </span>
        </li>
      </ul>
    </fieldset>
    <fieldset>
      <legend>Distribution</legend>
      <ul class="oc-ui-form-list">
        <!-- field: License -->
        <li class="ui-helper-clearfix">
          <label class="scheduler-label"><span class="color-red">* </span><span id="i18n_dist_label">Distribution Channel(s)</span>:</label>
          <span id="dist">
            <input id="distribution" name="distribution" type="checkbox" checked="checked" disabled="disabled" class="configField" value="Matterhorn Media Module" />
            <span id="i18n_dist_mmm">&nbsp;Matterhorn Media Module</span>
            <input id="youtube" name="youtube" type="checkbox" disabled="disabled" class="configField" value="Youtube" />
            <span id="i18n_dist_mmm">&nbsp;Youtube</span>
            <input id="itunesu" name="itunesu" type="checkbox" disabled="disabled" class="configField" value="iTunesU" />
            <span id="i18n_dist_mmm">&nbsp;iTunesU</span>
          </span>
        </li>
        <!-- field: License -->
        <li class="ui-helper-clearfix">
          <label class="scheduler-label" for="license" id="licenseLabel"><span id="i18n_license_label">License</span>:</label>
          <input type="text" class="oc-ui-form-field" id="license" name="license" maxlength="255" style="width:300px;"/>
        </li>
      </ul>
    </fieldset>
    <script type="text/javascript">
      var ocWorkflowPanel = ocWorkflowPanel || {};
      ocWorkflowPanel.registerComponents = function(components){
        /* components with keys that begin with 'org.opencastproject.workflow.config' will be passed
         * into the workflow. The component's nodeKey must match the components array key.
         *
         * Example:'org.opencastproject.workflow.config.myProperty' will be availible at ${my.property}
         */
        components['org.opencastproject.workflow.config.trimHold'] = new ocAdmin.Component(
          ['trimHold'],
          {key: 'org.opencastproject.workflow.config.trimHold'});
          
        components['org.opencastproject.workflow.config.captionHold'] = new ocAdmin.Component(
          ['captionHold'],
          {key: 'org.opencastproject.workflow.config.captionHold'});
          
        ocScheduler.dublinCore.components['license'] = new ocAdmin.Component(
          ['license'],
          {label: 'licenseLabel', key: 'license'});
          
          //etc...
      }
      ocWorkflowPanel.setComponentValues = function(values, components){
        components['org.opencastproject.workflow.config.captionHold'].setValue(values['org.opencastproject.workflow.config.captionHold']);
        components['org.opencastproject.workflow.config.trimHold'].setValue(values['org.opencastproject.workflow.config.trimHold']);
        components['license'].setValue(values['license']);
      }
    </script>
  ]]>
  </configuration_panel>

  <operations>

    <!-- Apply ACL from series to the mediapackage -->

    <operation
      id="apply-acl"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Applying access control rules">
    </operation>
    
    <!-- tag the incoming source material for archival -->

    <operation
      id="tag"
      description="Tagging source material for archival">
      retry-strategy="hold"
      <configurations>
        <configuration key="source-flavors">*/source,dublincore/*,security/*</configuration>
        <configuration key="target-tags">+archive</configuration>
      </configurations>
    </operation>

    <!-- tag the dublin core catalogs so they will be distributed and added to search -->
    
    <operation
      id="tag"
      retry-strategy="hold"
      description="Tagging dublin core catalogs for publishing">
      <configurations>
        <configuration key="source-flavors">dublincore/*</configuration>
        <configuration key="target-tags">+engage</configuration>
      </configurations>
    </operation> 

    <!-- inspect the media -->
    
    <operation
      id="inspect"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Inspecting the media package">
    </operation>

    <!-- prepare audio/video tracks -->

    <operation
      id="prepare-av"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Preparing presenter audio and video work versions">
      <configurations>
        <configuration key="source-flavor">presenter/source</configuration>
        <configuration key="target-flavor">presenter/work</configuration>
        <configuration key="rewrite">false</configuration>
        <configuration key="promiscuous-audio-muxing">true</configuration>
      </configurations>
    </operation>

    <operation
      id="prepare-av"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Preparing presentation audio and video work version">
      <configurations>
        <configuration key="source-flavor">presentation/source</configuration>
        <configuration key="target-flavor">presentation/work</configuration>
        <configuration key="rewrite">false</configuration>
        <configuration key="promiscuous-audio-muxing">true</configuration>
      </configurations>
    </operation>

    <!-- encode to hold preview player formats -->
    <operation
      id="compose"
      if="${trimHold}"
      retry-strategy="hold"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Encoding presenter (camera) video for preview">
      <configurations>
        <configuration key="source-flavor">presenter/work</configuration>
        <configuration key="target-flavor">presenter/preview</configuration>
        <configuration key="encoding-profile">flash-preview.http</configuration>
      </configurations>
    </operation>

    <operation
      id="compose"
      if="${trimHold}"
      retry-strategy="hold"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) for preview">
      <configurations>
        <configuration key="source-flavor">presentation/work</configuration>
        <configuration key="target-flavor">presentation/preview</configuration>
        <configuration key="encoding-profile">flash-preview.http</configuration>
      </configurations>
    </operation>

    <!-- hold to trim media-->
   
    <operation
      id="trim"
      if="${trimHold}"
      retry-strategy="hold"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Waiting for user to review / trim recording">
      <configurations>
      	<configuration key="duration-tolerance">1000</configuration>
        <configuration key="source-flavor">*/work</configuration>
        <configuration key="target-flavor-subtype">trimmed</configuration>
        <configuration key="encoding-profile">trim.work</configuration>
      </configurations>
    </operation>  


    <!-- encode to master formats -->

    <operation
      id="compose"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presenter (camera) video to Master">
      <configurations>
        <configuration key="source-flavor">presenter/trimmed</configuration>
        <configuration key="target-flavor">presenter/master</configuration>
        <configuration key="encoding-profile">teltek.master</configuration>
      </configurations>
    </operation>
    <operation
      id="compose"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) to Master">
      <configurations>
        <configuration key="source-flavor">presentation/trimmed</configuration>
        <configuration key="target-flavor">presentation/master</configuration>
        <configuration key="encoding-profile">teltekvga.master</configuration>
      </configurations>
    </operation>


    <!-- tag the master media for archive-->

    <operation
      id="tag"
      description="Tagging trimmed media for archive">
      <configurations>
        <configuration key="source-flavors">*/master</configuration>
        <configuration key="target-tags">+archive</configuration>
      </configurations>
    </operation>

    
    <!-- encode to engage player preview images --> 
    <operation
      id="image"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presenter (camera) to player preview image">
      <configurations>
        <configuration key="source-flavor">presenter/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-flavor">presenter/player+preview</configuration>
        <configuration key="target-tags">engage</configuration>
        <configuration key="encoding-profile">player-preview.http</configuration>
        <configuration key="time">20</configuration>
      </configurations>
    </operation>
    <operation
      id="image"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) to player preview image">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-flavor">presentation/player+preview</configuration>
        <configuration key="target-tags">engage</configuration>
        <configuration key="encoding-profile">player-preview.http</configuration>
        <configuration key="time">20</configuration>
      </configurations>
    </operation>

    <!-- encode to engage player formats -->
    <operation
      id="compose"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presenter (camera) video to h264 download">
      <configurations>
        <configuration key="source-flavor">presenter/master</configuration>
	<configuration key="target-flavor">presenter/tomp4box</configuration>
        <!--configuration key="target-flavor">presenter/delivery</configuration-->
        <configuration key="encoding-profile">mp4h264crop.http</configuration>
        <configuration key="target-tags">engage,archive</configuration>
      </configurations>
    </operation>

    <!--<operation
      id="execute-many"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Applying MP4Box to reduce mp4 header size">
      <configurations>
        <configuration key="exec">/usr/local/bin/MP4Box</configuration>
        <configuration key="params">-inter 1000 #{in} -out #{out}</configuration>-->
        <!--<configuration key="source-tags">mp4</configuration> -->
        <!-- <configuration key="target-tags">-mp4</configuration> -->
	<!--<configuration key="source-flavor">presenter/tomp4box</configuration>
        <configuration key="target-flavor">presenter/delivery</configuration>
        <configuration key="target-tags">streaming,engage</configuration>
        <configuration key="output-filename">CAMERA.mp4</configuration>
        <configuration key="expected-type">Track</configuration>
      </configurations>
    </operation>-->

    <operation
      id="compose"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) to Flash download">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
        <configuration key="target-flavor">presentation/tomp4box</configuration>
        <!-- configuration key="target-flavor">presentation/delivery</configuration-->
        <configuration key="encoding-profile">mp4h264vga.http</configuration>
        <configuration key="target-tags">engage, archive</configuration>
      </configurations>
    </operation> 

    <!--<operation
      id="execute-many"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Applying MP4Box to reduce mp4 header size">
      <configurations>
        <configuration key="exec">/usr/local/bin/MP4Box</configuration>
        <configuration key="params">-inter 1000 #{in} -out #{out}</configuration>-->
        <!--<configuration key="source-tags">mp4</configuration> -->
        <!-- <configuration key="target-tags">-mp4</configuration> -->
        <!--<configuration key="source-flavor">presentation/tomp4box</configuration>
        <configuration key="target-flavor">presentation/delivery</configuration>
        <configuration key="target-tags">streaming,engage</configuration>
        <configuration key="output-filename">SCREEN.mp4</configuration>
        <configuration key="expected-type">Track</configuration>
      </configurations>
    </operation>-->

    <!-- run the videosegmentation -->
    <operation
      id="segment-video"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Extracting segments from presentation">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
      </configurations>
    </operation>

    <!-- encode to engage search result preview images -->
    <operation
      id="image"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presenter (camera) to search result preview image">
      <configurations>
        <configuration key="source-flavor">presenter/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-flavor">presenter/search+preview</configuration>
        <configuration key="target-tags">engage</configuration>
        <configuration key="encoding-profile">search-cover.http</configuration>
        <configuration key="time">20</configuration>
      </configurations>
    </operation>
    <operation
      id="image"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) to search result preview image">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-flavor">presentation/search+preview</configuration>
        <configuration key="target-tags">engage</configuration>
        <configuration key="encoding-profile">search-cover.http</configuration>
        <configuration key="time">20</configuration>
      </configurations>
    </operation>

        
    <!-- Generate segment previews -->
    <operation
      id="segmentpreviews"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Encoding presentation (screen) to segment preview image">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-flavor">presentation/segment+preview</configuration>
        <configuration key="reference-flavor">presentation/delivery</configuration>
        <configuration key="reference-tags">engage</configuration>
        <configuration key="target-tags">engage</configuration>
        <configuration key="encoding-profile">player-slides.http</configuration>
      </configurations>
    </operation>

    <!-- Run text analysis -->
    <operation
      id="extract-text"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Extracting text from presentation segments">
      <configurations>
        <configuration key="source-flavor">presentation/master</configuration>
        <configuration key="source-tags"></configuration>
        <configuration key="target-tags">engage</configuration>
      </configurations>
    </operation>

    <!-- Apply ACL from series to the mediapackage -->
    <operation
      id="apply-acl"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Applying access control rules">
    </operation>

    <!-- Distribute to download server -->
    <operation
      id="distribute-download"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Distributing to progressive downloads">
      <configurations>
        <configuration key="source-tags">engage,atom,rss,-publish</configuration>
        <configuration key="target-tags">publish</configuration>
      </configurations>
    </operation>

   <operation
      id="distribute-streaming"
      fail-on-error="true"
      retry-strategy="hold"
      if="${org.opencastproject.streaming.url}"
      exception-handler-workflow="error"
      description="Distributing to streaming server">
      <configurations>
        <configuration key="source-tags">streaming,-publish</configuration>
        <configuration key="target-tags">publish</configuration>
      </configurations>
    </operation>

    <!-- Remove archive tag from distributed material -->
    <operation
      id="tag"
      retry-strategy="hold"
      description="Removing archive tag from distributed material">
      <configurations>
	    <configuration key="source-tags">publish</configuration>
        <configuration key="target-tags">-archive</configuration>
      </configurations>
    </operation>

    <!-- Archive the current state of the mediapackage -->
    <operation
      if="${archiveOp}"
      id="archive"
      retry-strategy="hold"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Archiving">
      <configurations>
        <configuration key="source-tags">archive</configuration>
      </configurations>
    </operation>


    <!-- Publish to engage search index -->
    <operation
      id="publish"
      fail-on-error="true"
      retry-strategy="hold"
      exception-handler-workflow="error"
      description="Published">
      <configurations>
        <configuration key="source-tags">publish</configuration>
      </configurations>
    </operation>
 
    <!-- Cleanup the working file repository -->
    <operation
      id="cleanup"
      retry-strategy="hold"
      fail-on-error="false"
      description="Cleaning up">
      <configurations>
        <configuration key="preserve-flavors">*/master,dublincore/*</configuration>
      </configurations>
    </operation>
  </operations>

</definition>
